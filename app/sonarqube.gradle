apply plugin: 'org.sonarqube'

def appPropertiesFile = file("nytimes.properties")
def appProperties = new Properties()
appProperties.load(new FileInputStream(appPropertiesFile))

sonarqube() {
    properties {
        property "sonar.projectName", (String) android.defaultConfig.applicationId
        property "sonar.projectKey", android.defaultConfig.applicationId + android.defaultConfig.versionName
        property "sonar.sourceEncoding", "UTF-8"

        property "sonar.sources", "./src/main/"
        property "sonar.binaries", "/intermediates/classes/debug"
        property "sonar.java.binaries", "${project.buildDir}/intermediates/classes/debug"
        property "sonar.exclusions", "build/**,**/*.png,*.iml, **/*generated*, "

        property "sonar.import_unknown_files", true
        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"
        property "sonar.host.url", appProperties.get('sonarUrl')
        property "sonar.login", appProperties.get('sonarLogin')
        property "sonar.tests", "./src/test/, ./src/androidTest/"
        property "sonar.jacoco.reportPath", fileTree(dir: project.projectDir, includes: ['**/*.exec'])
        property "sonar.java.test.binaries", "${project.buildDir}/intermediates/classes/debug"
        property "sonar.jacoco.itReportPath", fileTree(dir: project.projectDir, includes: ['**/*.ec'])
    }
}
